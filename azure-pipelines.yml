# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

# Create a variable
# Note that this does _not_ update the environment of the current script.
- script: |
    echo '##vso[task.setvariable variable=codecov]CODECOV'

# An environment variable called `CODECOV` has been added to all downstream steps
- bash: |
    echo my environment variable is CODECOV
- pwsh: |
    Write-Host "my environment variable is $env:CODECOV"

- script: |
    pip install pytest pytest-azurepipelines
    pip install pytest-cov
    pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html
  displayName: 'Test with pytest'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/test-results.xml'
    testRunTitle: 'Python $(python.version)'
  condition: succeededOrFailed()

- script: |
    codecov --token=codecov
    bash <(curl https://codecov.io/bash) -t 2e94c02d-e60d-4115-9fad-ac1571be0d86 -f coverage.xml -F adder -F subtractor
  displayName: 'codecov'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
